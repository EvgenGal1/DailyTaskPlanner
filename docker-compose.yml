services:
  backend:
    container_name: py_back
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env.docker
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network

  database:
    image: postgres:14
    container_name: postgres_data
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.docker
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "your1-redis2-password3"]
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
